# Generated by Django 2.0.9 on 2018-10-07 20:46

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('cards', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Deck',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('url', models.CharField(max_length=500)),
                ('visibility', models.CharField(choices=[('visible', 'visible'), ('hidden', 'hidden')], default='visible', max_length=12)),
                ('authorname', models.CharField(max_length=100)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'deck',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='DeckCard',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('cardcount', models.IntegerField(default=1)),
                ('board', models.CharField(choices=[('main', 'main'), ('side', 'side'), ('command', 'command')], default='main', max_length=8)),
                ('deck', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='decks.Deck')),
                ('physicalcard', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cards.PhysicalCard')),
            ],
            options={
                'db_table': 'deckcard',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='DeckCluster',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('clusterkey', models.IntegerField(default=-1)),
                ('formatname', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'deckcluster',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='DeckClusterDeck',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('distance', models.FloatField(default=1000.0)),
                ('deck', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='decks.Deck')),
                ('deckcluster', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='decks.DeckCluster')),
            ],
            options={
                'db_table': 'deckclusterdeck',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='FormatCardStat',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('occurence_count', models.IntegerField(default=0)),
                ('deck_count', models.IntegerField(default=0)),
                ('average_card_count_in_deck', models.FloatField(default=0.0)),
                ('percentage_of_all_cards', models.FloatField(default=0.0)),
                ('format', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cards.Format')),
                ('physicalcard', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cards.PhysicalCard')),
            ],
            options={
                'db_table': 'formatcardstat',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='FormatStat',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('tournamentdeck_count', models.IntegerField(default=0)),
                ('tournamentdeckcard_count', models.IntegerField(default=0)),
                ('format', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cards.Format')),
            ],
            options={
                'db_table': 'formatstat',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Tournament',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('url', models.CharField(max_length=500)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('format', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cards.Format')),
            ],
            options={
                'db_table': 'tournament',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='TournamentDeck',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('place', models.IntegerField(default=1)),
                ('deck', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='decks.Deck')),
                ('tournament', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='decks.Tournament')),
            ],
            options={
                'db_table': 'tournamentdeck',
                'managed': True,
            },
        ),
        migrations.AddField(
            model_name='deck',
            name='cards',
            field=models.ManyToManyField(through='decks.DeckCard', to='cards.PhysicalCard'),
        ),
        migrations.AddField(
            model_name='deck',
            name='format',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cards.Format'),
        ),
        migrations.AddField(
            model_name='deck',
            name='tournaments',
            field=models.ManyToManyField(through='decks.TournamentDeck', to='decks.Tournament'),
        ),
        migrations.AlterUniqueTogether(
            name='tournamentdeck',
            unique_together={('deck', 'tournament')},
        ),
        migrations.AlterUniqueTogether(
            name='formatcardstat',
            unique_together={('format', 'physicalcard')},
        ),
        migrations.AlterUniqueTogether(
            name='deckcard',
            unique_together={('deck', 'physicalcard', 'board')},
        ),
    ]
